import{_ as t,X as c,Y as o,$ as n,a0 as s,a1 as e,Z as p,E as l}from"./framework-7c2c1cd4.js";const i="/TaiyiBlog/assets/FactoryMethod-158376dc.png",u={},r=p(`<h2 id="别称" tabindex="-1"><a class="header-anchor" href="#别称" aria-hidden="true">#</a> 别称</h2><p>虚拟构造器</p><h2 id="目的" tabindex="-1"><a class="header-anchor" href="#目的" aria-hidden="true">#</a> 目的</h2><p>为创建一个对象定义一个接口，但是让子类决定实例化那个类。工厂方法允许类将实例化延迟到子类。</p><h2 id="程序实例" tabindex="-1"><a class="header-anchor" href="#程序实例" aria-hidden="true">#</a> 程序实例</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>taiyi<span class="token punctuation">.</span>creational</span><span class="token punctuation">;</span>

<span class="token comment">// 抽象产品和抽象工厂类</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token class-name">Product</span> <span class="token function">manuFacture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 具体产品</span>
<span class="token keyword">class</span> <span class="token class-name">ProductA</span> <span class="token keyword">extends</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;产品 A ...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">ProductB</span> <span class="token keyword">extends</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;产品 B ...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 具体工厂</span>
<span class="token keyword">class</span> <span class="token class-name">FactoryA</span> <span class="token keyword">extends</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Product</span> <span class="token function">manuFacture</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ProductA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">FactoryB</span> <span class="token keyword">extends</span> <span class="token class-name">Factory</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Product</span> <span class="token function">manuFacture</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ProductB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FactoryMethod</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">FactoryA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">manuFacture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">FactoryB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">manuFacture</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uml图" tabindex="-1"><a class="header-anchor" href="#uml图" aria-hidden="true">#</a> UML图</h2><figure><img src="`+i+'" alt="image-20230508202939988" tabindex="0" loading="lazy"><figcaption>image-20230508202939988</figcaption></figure><h2 id="适用性" tabindex="-1"><a class="header-anchor" href="#适用性" aria-hidden="true">#</a> 适用性</h2><ul><li>一个类无法预料它所要必须创建的对象的类</li><li>一个类想要它的子类来指定它要创建的对象</li><li>类将责任委派给几个帮助子类中的一个，而你想定位了解是具体之中的哪一个</li></ul><h2 id="java中的例子" tabindex="-1"><a class="header-anchor" href="#java中的例子" aria-hidden="true">#</a> Java中的例子</h2>',11),d={href:"http://docs.oracle.com/javase/8/docs/api/java/util/Calendar.html#getInstance--",target:"_blank",rel:"noopener noreferrer"},k={href:"http://docs.oracle.com/javase/8/docs/api/java/util/ResourceBundle.html#getBundle-java.lang.String-",target:"_blank",rel:"noopener noreferrer"},v={href:"http://docs.oracle.com/javase/8/docs/api/java/text/NumberFormat.html#getInstance--",target:"_blank",rel:"noopener noreferrer"},m={href:"http://docs.oracle.com/javase/8/docs/api/java/nio/charset/Charset.html#forName-java.lang.String-",target:"_blank",rel:"noopener noreferrer"},b={href:"http://docs.oracle.com/javase/8/docs/api/java/net/URLStreamHandlerFactory.html#createURLStreamHandler-java.lang.String-",target:"_blank",rel:"noopener noreferrer"},h={href:"https://docs.oracle.com/javase/8/docs/api/java/util/EnumSet.html#of-E-",target:"_blank",rel:"noopener noreferrer"},y={href:"https://docs.oracle.com/javase/8/docs/api/javax/xml/bind/JAXBContext.html#createMarshaller--",target:"_blank",rel:"noopener noreferrer"};function f(w,_){const a=l("ExternalLinkIcon");return c(),o("div",null,[r,n("ul",null,[n("li",null,[n("a",d,[s("java.util.Calendar"),e(a)])]),n("li",null,[n("a",k,[s("java.util.ResourceBundle"),e(a)])]),n("li",null,[n("a",v,[s("java.text.NumberFormat"),e(a)])]),n("li",null,[n("a",m,[s("java.nio.charset.Charset"),e(a)])]),n("li",null,[n("a",b,[s("java.net.URLStreamHandlerFactory"),e(a)])]),n("li",null,[n("a",h,[s("java.util.EnumSet"),e(a)])]),n("li",null,[n("a",y,[s("javax.xml.bind.JAXBContext"),e(a)])])])])}const j=t(u,[["render",f],["__file","FactoryMethod.html.vue"]]);export{j as default};
