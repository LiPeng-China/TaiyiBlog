import{_ as s,X as l,Y as n,Z as e,$ as a}from"./framework-7c2c1cd4.js";const t={},m=e('<h2 id="索引分类" tabindex="-1"><a class="header-anchor" href="#索引分类" aria-hidden="true">#</a> 索引分类</h2><ul><li>按 <em>数据结构</em> 分类：B+树索引、Hash索引、Full-text索引</li><li>按 <em>物理存储</em> 分类：聚簇索引（主键索引）、二级索引</li><li>按 <em>字段特性</em> 分类：主键索引、唯一索引、普通索引、前缀索引</li><li>按 <em>字段个数</em> 分类：单列索引、联合索引</li></ul><h2 id="b-树索引" tabindex="-1"><a class="header-anchor" href="#b-树索引" aria-hidden="true">#</a> B+树索引</h2><p>InnoDB 默认采用的索引类型</p><h2 id="聚簇索引-主键索引" tabindex="-1"><a class="header-anchor" href="#聚簇索引-主键索引" aria-hidden="true">#</a> 聚簇索引（主键索引）</h2><ul><li>如果有主键，默认使用主键作为聚簇索引的 key ；</li><li>没有主键，选择第一个不包含 NULL 值的列作为聚簇索引的 key ；</li><li>以上都没有，InnoDB 自动生成一个隐式自增 id 作为聚簇索引的 key 。</li></ul><h2 id="二级索引" tabindex="-1"><a class="header-anchor" href="#二级索引" aria-hidden="true">#</a> 二级索引</h2><ul><li>主键索引的B+树叶子结点存放的是完整的用户记录；</li><li>二级索引的B+树的叶子结点存放的是主键值，而不是实际记录。</li></ul><h2 id="回表" tabindex="-1"><a class="header-anchor" href="#回表" aria-hidden="true">#</a> 回表</h2><ol><li>先检验二级索引中B+树的索引值，找到随影的叶子结点，获取主键值；</li><li>然后再通过主键索引查询到对应的叶子结点，获取整行记录。</li></ol><p>要查询两个B+树才能查到数据。</p><h2 id="覆盖索引" tabindex="-1"><a class="header-anchor" href="#覆盖索引" aria-hidden="true">#</a> 覆盖索引</h2><p>当查询的数据能在二级索引的B+树叶子结点里查询到，就不需要在查询主键索引。</p><p>只需要差一个B+树就能找到数据。</p><h2 id="联合索引" tabindex="-1"><a class="header-anchor" href="#联合索引" aria-hidden="true">#</a> 联合索引</h2><p>最左匹配原则。</p><p>针对范围查找有优化空间。</p><h2 id="索引下推" tabindex="-1"><a class="header-anchor" href="#索引下推" aria-hidden="true">#</a> 索引下推</h2><p>MySQL5.6引入 <em>索引下推优化</em> （index condition pushdown），可以再联合索引遍历过程中，对联合索引中包含的字段先做判断，规律掉不满足条件的记录，减少回表次数。</p><h2 id="索引区分度" tabindex="-1"><a class="header-anchor" href="#索引区分度" aria-hidden="true">#</a> 索引区分度</h2><p>建立联合索引的字段顺序，对索引效率也有很大影响。越靠前的字段，被用于索引过滤的概率越高，实际开发工作中建立联合索引时，要把区分度大的字段排在前面。</p>',21),i=a("p",{class:"katex-block"},[a("span",{class:"katex-display"},[a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("semantics",null,[a("mrow",null,[a("mtext",null,"区分度"),a("mo",null,"="),a("mfrac",null,[a("mrow",null,[a("mi",null,"d"),a("mi",null,"i"),a("mi",null,"s"),a("mi",null,"t"),a("mi",null,"i"),a("mi",null,"n"),a("mi",null,"c"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mi",null,"c"),a("mi",null,"o"),a("mi",null,"l"),a("mi",null,"u"),a("mi",null,"m"),a("mi",null,"n"),a("mo",{stretchy:"false"},")")]),a("mrow",null,[a("mi",null,"c"),a("mi",null,"o"),a("mi",null,"u"),a("mi",null,"n"),a("mi",null,"t"),a("mo",{stretchy:"false"},"("),a("mo",null,"∗"),a("mo",{stretchy:"false"},")")])])]),a("annotation",{encoding:"application/x-tex"}," 区分度 = \\frac{distinct(column)}{count(*)} ")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord cjk_fallback"},"区分度"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"2.363em","vertical-align":"-0.936em"}}),a("span",{class:"mord"},[a("span",{class:"mopen nulldelimiter"}),a("span",{class:"mfrac"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"1.427em"}},[a("span",{style:{top:"-2.314em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"co"),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mord mathnormal"},"n"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mopen"},"("),a("span",{class:"mord"},"∗"),a("span",{class:"mclose"},")")])]),a("span",{style:{top:"-3.23em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),a("span",{style:{top:"-3.677em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mord mathnormal"},"i"),a("span",{class:"mord mathnormal"},"s"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mord mathnormal"},"in"),a("span",{class:"mord mathnormal"},"c"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal"},"co"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),a("span",{class:"mord mathnormal"},"u"),a("span",{class:"mord mathnormal"},"mn"),a("span",{class:"mclose"},")")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.936em"}},[a("span")])])])]),a("span",{class:"mclose nulldelimiter"})])])])])])],-1),r=a("p",null,"MySQL 的查询优化器发现某个值出现在表的数据行中的百分比（30%）很高的时候，会忽略索引，进行全扫描。",-1),c=[m,i,r];function h(o,d){return l(),n("div",null,c)}const u=s(t,[["render",h],["__file","01_什么是索引.html.vue"]]);export{u as default};
